version: '3.8'

networks:
  metric-monitoring:
    driver: bridge
  logs-monitoring: 
    driver: bridge

volumes:
  prometheus: {}
  alertmanager: {}

services:
  # APACHE SERVER
  httpd:
    image: httpd
    container_name: httpd
    ports:
      - "81:80"
    networks:
      - metric-monitoring
      - logs-monitoring
  # APACHE SERVER EXPORTER FOR CONTAINER
  apache_exporter_container:
    image: bitnami/apache-exporter:latest
    container_name: apache_exporter_container
    privileged: true
    restart: unless-stopped
    ports: ['9118:9117']
    networks:
      - metric-monitoring
  # APACHE SERVER EXPORTER FOR LOCALHOST
  apache_exporter_local:
    image: bitnami/apache-exporter:latest
    container_name: apache_exporter_localhost
    privileged: true
    restart: unless-stopped
    expose: ['9117']
    entrypoint: /bin/apache_exporter --scrape_uri="http://localhost"
    networks:
      - metric-monitoring
  # NODE EXPORTER
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - metric-monitoring
  # REDIS
  redis:
    image: redis:latest
    container_name: redis
    expose:
      - 9100
    networks:
      - metric-monitoring
  # CADVISOR
  cadvisor:
    depends_on:
      - redis
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    expose:
      - 8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - metric-monitoring
  # ALERT MANAGER
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./config/alertmanager/:/config/
      - alertmanager:/data/
    command: --config.file=/config/alertmanager.yaml --log.level=debug
    networks:
      - metric-monitoring
      - logs-monitoring
  # PROMETHEUS
  prometheus:
    depends_on:
      - cadvisor
      - node-exporter
      - alertmanager
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    privileged: true
    volumes:
      - ./config/prometheus:/etc/prometheus/
      - prometheus:/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - metric-monitoring
  # LOKI
  loki:
    depends_on:
      - alertmanager
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    volumes:
      - ./config/loki/:/etc/loki/
    command: -config.file=/etc/loki/loki-config.yaml
    expose:
      - 3100
    networks:
      - logs-monitoring
  # PROMTAIL
  promtail:
    depends_on:
      - loki
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./config/promtail/:/etc/promtail/
      - /var/log:/var/log
    command: -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - logs-monitoring
  # GRAFANA
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    entrypoint:
      - /usr/share/grafana/bin/grafana-server
      - --homepath=/usr/share/grafana
      - --config=/etc/grafana-config/grafana.ini
    volumes:
      - ./config/grafana/providers:/etc/grafana/provisioning/dashboards
      - ./config/grafana/configs:/etc/grafana-config
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
      # - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
    ports:
      - "3000:3000"
    networks:
      - metric-monitoring
      - logs-monitoring
